{"ast":null,"code":"// import React, { useState } from 'react';\n// import './Booking.css';\n// import courseData from './courseSchedule.json';\n// import { PaymentElement, useStripe, useElements } from '@stripe/react-stripe-js';\n// import StripeWrapper from './Payment/StripeWrapper';\n\n// export default function BookingPage() {\n//   const [step, setStep] = useState(1);\n//   const [selectedLevel, setSelectedLevel] = useState('');\n//   const [selectedCourse, setSelectedCourse] = useState('');\n//   const [selectedSessions, setSelectedSessions] = useState([]);\n//   const [formFilled, setFormFilled] = useState(false);\n\n//   const stripe = useStripe();\n//   const elements = useElements();\n\n//   const nextStep = () => {\n//     if (step === 2 && !formFilled) {\n//       alert('Please fill in all required fields.');\n//       return;\n//     }\n//     setStep(prev => prev + 1);\n//   };\n\n//   const prevStep = () => setStep(prev => prev - 1);\n\n//   const levels = [...new Set(courseData.map(item => item.year))];\n//   const allCourses = courseData.filter(course => course.year === selectedLevel);\n//   const filteredCourses = allCourses.filter(course => course.subject === selectedCourse);\n\n//   const handleLevelChange = (e) => {\n//     setSelectedLevel(e.target.value);\n//     setSelectedCourse('');\n//     setSelectedSessions([]);\n//   };\n\n//   const handleCourseChange = (e) => {\n//     setSelectedCourse(e.target.value);\n//     setSelectedSessions([]);\n//   };\n\n//   const handleSelectSession = (session) => {\n//     setSelectedSessions([session]);\n//   };\n\n//   const handleStripeSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!stripe || !elements) return;\n\n//     const result = await stripe.confirmPayment({\n//       elements,\n//       confirmParams: {\n//         return_url: window.location.origin + '/success',\n//       },\n//     });\n\n//     if (result.error) {\n//       alert(result.error.message);\n//     }\n//   };\n\n//   return (\n//     <div className=\"booking-container styled\">\n//       <div className=\"step-indicator\">\n//         {[1, 2, 3].map(n => (\n//           <div key={n} className={`step ${step === n ? 'active' : ''}`}>{n}</div>\n//         ))}\n//       </div>\n\n//       {step === 1 && (\n//         <div className=\"step-content\">\n//           <h2>Course Booking</h2>\n//           <div className=\"form-row\">\n//             <div>\n//               <label>Year Level:</label>\n//               <select value={selectedLevel} onChange={handleLevelChange} required>\n//                 <option>Select...</option>\n//                 {levels.map((level, index) => (\n//                   <option key={index} value={level}>{level}</option>\n//                 ))}\n//               </select>\n//             </div>\n//             <div>\n//               <label>Course:</label>\n//               <select value={selectedCourse} onChange={handleCourseChange} required>\n//                 <option>Select...</option>\n//                 {[...new Set(allCourses.map(course => course.subject))].map((subject, index) => (\n//                   <option key={index} value={subject}>{subject}</option>\n//                 ))}\n//               </select>\n//             </div>\n//           </div>\n\n//           <h4>Available Sessions</h4>\n//           <table className=\"styled-table\">\n//             <thead>\n//               <tr><th>Select</th><th>Subject</th><th>From</th><th>To</th><th>Time</th><th>Sessions</th><th>Fee</th></tr>\n//             </thead>\n//             <tbody>\n//               {filteredCourses.length > 0 ? filteredCourses.map((course, index) => (\n//                 <tr key={index}>\n//                   <td><button onClick={() => handleSelectSession(course)}>ADD</button></td>\n//                   <td>{course.subject}</td>\n//                   <td>{course.from}</td>\n//                   <td>{course.to}</td>\n//                   <td>{course.time}</td>\n//                   <td>{course.sessions}</td>\n//                   <td>{course.fee}</td>\n//                 </tr>\n//               )) : (\n//                 <tr><td colSpan=\"7\">No sessions found</td></tr>\n//               )}\n//             </tbody>\n//           </table>\n\n//           <h4>Selected Sessions</h4>\n//           <table className=\"styled-table\">\n//             <thead><tr><th>Subject</th><th>From</th><th>To</th><th>Time</th><th>Sessions</th><th>Fee</th></tr></thead>\n//             <tbody>\n//               {selectedSessions.map((s, i) => (\n//                 <tr key={i}>\n//                   <td>{s.subject}</td>\n//                   <td>{s.from}</td>\n//                   <td>{s.to}</td>\n//                   <td>{s.time}</td>\n//                   <td>{s.sessions}</td>\n//                   <td>{s.fee}</td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n\n//           <button className=\"next-btn\" onClick={nextStep}>NEXT</button>\n//         </div>\n//       )}\n\n//       {step === 2 && (\n//         <div className=\"step-content\">\n//           <h2>Personal & Student Details</h2>\n//           <form onChange={() => setFormFilled(true)}>\n//             <div className=\"form-grid\">\n//               <select required><option value=\"\">Title</option><option>Mr</option><option>Ms</option><option>Mrs</option></select>\n//               <input required placeholder=\"First Name\" />\n//               <input required placeholder=\"Last Name\" />\n//               <select required><option value=\"\">Gender</option><option>Male</option><option>Female</option></select>\n//               <input required placeholder=\"Address\" />\n//               <input required placeholder=\"Postcode\" />\n//               <input required placeholder=\"Suburb\" />\n//               <select required><option value=\"\">State</option><option>VIC</option><option>NSW</option><option>QLD</option></select>\n//               <input required placeholder=\"Email\" />\n//               <input required placeholder=\"Mobile\" />\n//             </div>\n//           </form>\n//           <button className=\"next-btn\" onClick={nextStep}>NEXT</button>\n//         </div>\n//       )}\n\n//       {step === 3 && (\n//         <div className=\"step-content\">\n//           <h2>Confirm Booking & Payment</h2>\n//           <label><input type=\"checkbox\" required /> I agree to the Terms and Conditions</label>\n//           <form onSubmit={handleStripeSubmit}>\n//             <PaymentElement />\n//             <StripeWrapper />\n//             <div className=\"btn-group\">\n//               <button type=\"button\" onClick={prevStep}>BACK</button>\n//               <button type=\"submit\">PAY NOW</button>\n//             </div>\n//           </form>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/Lufina Zohar/Downloads/website/Projects/src/pages/Booking.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import './Booking.css';\r\n// import courseData from './courseSchedule.json';\r\n// import { PaymentElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\n// import StripeWrapper from './Payment/StripeWrapper';\r\n\r\n// export default function BookingPage() {\r\n//   const [step, setStep] = useState(1);\r\n//   const [selectedLevel, setSelectedLevel] = useState('');\r\n//   const [selectedCourse, setSelectedCourse] = useState('');\r\n//   const [selectedSessions, setSelectedSessions] = useState([]);\r\n//   const [formFilled, setFormFilled] = useState(false);\r\n\r\n//   const stripe = useStripe();\r\n//   const elements = useElements();\r\n\r\n//   const nextStep = () => {\r\n//     if (step === 2 && !formFilled) {\r\n//       alert('Please fill in all required fields.');\r\n//       return;\r\n//     }\r\n//     setStep(prev => prev + 1);\r\n//   };\r\n\r\n//   const prevStep = () => setStep(prev => prev - 1);\r\n\r\n//   const levels = [...new Set(courseData.map(item => item.year))];\r\n//   const allCourses = courseData.filter(course => course.year === selectedLevel);\r\n//   const filteredCourses = allCourses.filter(course => course.subject === selectedCourse);\r\n\r\n//   const handleLevelChange = (e) => {\r\n//     setSelectedLevel(e.target.value);\r\n//     setSelectedCourse('');\r\n//     setSelectedSessions([]);\r\n//   };\r\n\r\n//   const handleCourseChange = (e) => {\r\n//     setSelectedCourse(e.target.value);\r\n//     setSelectedSessions([]);\r\n//   };\r\n\r\n//   const handleSelectSession = (session) => {\r\n//     setSelectedSessions([session]);\r\n//   };\r\n\r\n//   const handleStripeSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!stripe || !elements) return;\r\n\r\n//     const result = await stripe.confirmPayment({\r\n//       elements,\r\n//       confirmParams: {\r\n//         return_url: window.location.origin + '/success',\r\n//       },\r\n//     });\r\n\r\n//     if (result.error) {\r\n//       alert(result.error.message);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"booking-container styled\">\r\n//       <div className=\"step-indicator\">\r\n//         {[1, 2, 3].map(n => (\r\n//           <div key={n} className={`step ${step === n ? 'active' : ''}`}>{n}</div>\r\n//         ))}\r\n//       </div>\r\n\r\n//       {step === 1 && (\r\n//         <div className=\"step-content\">\r\n//           <h2>Course Booking</h2>\r\n//           <div className=\"form-row\">\r\n//             <div>\r\n//               <label>Year Level:</label>\r\n//               <select value={selectedLevel} onChange={handleLevelChange} required>\r\n//                 <option>Select...</option>\r\n//                 {levels.map((level, index) => (\r\n//                   <option key={index} value={level}>{level}</option>\r\n//                 ))}\r\n//               </select>\r\n//             </div>\r\n//             <div>\r\n//               <label>Course:</label>\r\n//               <select value={selectedCourse} onChange={handleCourseChange} required>\r\n//                 <option>Select...</option>\r\n//                 {[...new Set(allCourses.map(course => course.subject))].map((subject, index) => (\r\n//                   <option key={index} value={subject}>{subject}</option>\r\n//                 ))}\r\n//               </select>\r\n//             </div>\r\n//           </div>\r\n\r\n//           <h4>Available Sessions</h4>\r\n//           <table className=\"styled-table\">\r\n//             <thead>\r\n//               <tr><th>Select</th><th>Subject</th><th>From</th><th>To</th><th>Time</th><th>Sessions</th><th>Fee</th></tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {filteredCourses.length > 0 ? filteredCourses.map((course, index) => (\r\n//                 <tr key={index}>\r\n//                   <td><button onClick={() => handleSelectSession(course)}>ADD</button></td>\r\n//                   <td>{course.subject}</td>\r\n//                   <td>{course.from}</td>\r\n//                   <td>{course.to}</td>\r\n//                   <td>{course.time}</td>\r\n//                   <td>{course.sessions}</td>\r\n//                   <td>{course.fee}</td>\r\n//                 </tr>\r\n//               )) : (\r\n//                 <tr><td colSpan=\"7\">No sessions found</td></tr>\r\n//               )}\r\n//             </tbody>\r\n//           </table>\r\n\r\n//           <h4>Selected Sessions</h4>\r\n//           <table className=\"styled-table\">\r\n//             <thead><tr><th>Subject</th><th>From</th><th>To</th><th>Time</th><th>Sessions</th><th>Fee</th></tr></thead>\r\n//             <tbody>\r\n//               {selectedSessions.map((s, i) => (\r\n//                 <tr key={i}>\r\n//                   <td>{s.subject}</td>\r\n//                   <td>{s.from}</td>\r\n//                   <td>{s.to}</td>\r\n//                   <td>{s.time}</td>\r\n//                   <td>{s.sessions}</td>\r\n//                   <td>{s.fee}</td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n\r\n//           <button className=\"next-btn\" onClick={nextStep}>NEXT</button>\r\n//         </div>\r\n//       )}\r\n\r\n//       {step === 2 && (\r\n//         <div className=\"step-content\">\r\n//           <h2>Personal & Student Details</h2>\r\n//           <form onChange={() => setFormFilled(true)}>\r\n//             <div className=\"form-grid\">\r\n//               <select required><option value=\"\">Title</option><option>Mr</option><option>Ms</option><option>Mrs</option></select>\r\n//               <input required placeholder=\"First Name\" />\r\n//               <input required placeholder=\"Last Name\" />\r\n//               <select required><option value=\"\">Gender</option><option>Male</option><option>Female</option></select>\r\n//               <input required placeholder=\"Address\" />\r\n//               <input required placeholder=\"Postcode\" />\r\n//               <input required placeholder=\"Suburb\" />\r\n//               <select required><option value=\"\">State</option><option>VIC</option><option>NSW</option><option>QLD</option></select>\r\n//               <input required placeholder=\"Email\" />\r\n//               <input required placeholder=\"Mobile\" />\r\n//             </div>\r\n//           </form>\r\n//           <button className=\"next-btn\" onClick={nextStep}>NEXT</button>\r\n//         </div>\r\n//       )}\r\n\r\n//       {step === 3 && (\r\n//         <div className=\"step-content\">\r\n//           <h2>Confirm Booking & Payment</h2>\r\n//           <label><input type=\"checkbox\" required /> I agree to the Terms and Conditions</label>\r\n//           <form onSubmit={handleStripeSubmit}>\r\n//             <PaymentElement />\r\n//             <StripeWrapper />\r\n//             <div className=\"btn-group\">\r\n//               <button type=\"button\" onClick={prevStep}>BACK</button>\r\n//               <button type=\"submit\">PAY NOW</button>\r\n//             </div>\r\n//           </form>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}